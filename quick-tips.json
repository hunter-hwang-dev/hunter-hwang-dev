[
    {
        "question": "왜 Java에서 boolean은 true 또는 false 두 개의 값만 가지는데, 차지하는 비용은 1 byte인가요?",
        "answer": "1bit가 아닌 8bit = 1byte를 차지하는 이유는 메모리 접근을 1byte씩 하고, 실제 하드웨어도 1byte 단위를 생각해 만들어졌어요. 아주 옛날이라면 모르겠지만, 지금은 1bit에 접근하는게 코스트가 더 많이 듭니다!",
        "hashtags": "#Java #data-type #boolean"
    },

    {
        "question": "Github 계정을 바꾸어 로그인하고 싶어요.",
        "answer": "설정 > '자격 증명 관리자' 검색 > Windows 자격 증명에서 github 관련 내용을 삭제합니다. 그 뒤에 재로그인해 보세요!",
        "hashtags": "#Github #credential"
    },

    {
        "question": "Kotlin에서 IntArray와 Array<Int>가 왜 다르게 취급되나요?",
        "answer": "둘의 차이는 int를 기본형으로 사용하냐, 참조형으로 사용하냐의 차이에요. Array<Int>의 항에는 null이 들어갈 수 있어요! Java로 비유한다면 IntArray는 int[], Array<Int>는 Integer[]라고 볼 수 있죠!",
        "hashtags": "#Kotlin #data-type #IntArray #Array<Int> #Java",
        "related-tips": "Java에서 Integer와 int의 차이를 알려주세요."
    },

    {
        "question": "Java에서 int와 Integer의 차이를 알려주세요.",
        "answer": "int는 기본형(primitive type)으로 null을 집어넣을 수 없어요! 하지만 Integer는 참조형(wrapper class)이라서, null을 담을 수 있어요.",
        "hashtags": "#Java #data-type #int #primitive-type #Integer #wrapper-class"
    },

    {
        "question": "Github Issues로 프로젝트를 관리하고 싶은데, 설정 어디에 있죠?",
        "answer": "Settings > General > Features에서 Issues 체크박스를 체크하세요!",
        "hashtags": "#Github #Issues #where-it-is"
    },

    {
        "question": "Github Wiki 설정을 켜려면 어디로 가야 하죠?",
        "answer": "Settings > General > Features에서 Wikis 체크박스를 체크하시면 됩니다.",
        "hashtags": "#Github #Wikis #where-it-is"
    },

    {
        "question": "Github 브랜치를 새로 생성하고 싶어요!",
        "answer": "Github 레포지토리의 Code 탭에서, 브랜치 드롭다운 메뉴를 클릭 > View All Branches > New Branch를 누르세요.",
        "hashtags": "#Github #Branches #where-it-is",
        "related-tips": "Github에서 default 브랜치를 변경하려면?"
    },

    {
        "question": "Github에서 default 브랜치를 변경하려면?",
        "answer": "Settings > General > Default branch의 Switch to another branch 버튼을 눌러, 새 default 브랜치를 고르세요.",
        "hashtags": "#Github #Branches #default-branch #where-it-is"
    },

    {
        "question": "터미널에서 브랜치 변경하는 법",
        "answer": "프로젝트 폴더 우클릭 > Git Bash Here (전 Git Bash를 씁니다) 로 터미널 열기 >  Settings > General > Default branch의 Switch to another branch 버튼을 눌러, 새 default 브랜치를 고르세요.",
        "hashtags": "#Github #Branches #default-branch #where-it-is"
    },
        
    {
        "question": "Github 웹페이지에서 추가한 브랜치가 VS Code에서 확인되지 않아요!",
        "answer": "Source Control > Source Control Repositories 가 켜져 있는지 확인해 보세요. 켜져 있다면, 브랜치 이름을 눌러 local 및 remote 브랜치들을 확인할 수 있습니다.",
        "hashtags": "#Github #git-fetch"
    },

    {
        "question": "Github 웹페이지에서 추가한 브랜치가 VS Code에서 확인되지 않아요!",
        "answer": "Source Control > Source Control Repositories 가 켜져 있는지 확인해 보세요. 켜져 있다면, 브랜치 이름을 눌러 local 및 remote 브랜치들을 확인할 수 있습니다.",
        "hashtags": "#Github #git-fetch"
    },

    {
        "question": "Java에서 String을 char 단위로 끊어 확인하는 법?",
        "answer": "1) String.charAt(인덱스); 2) String.toCharArray(); 를 사용 가능하다. cf) Kotlin은 for (c in string) { ... } 같이 작성이 가능하지만, Java는 타입 문제가 일어난다.",
        "hashtags": "#Java #type-casting #data-type #String #char",
        "createdAt": "2024-08-08"
    },

    {
        "question": "JCF? 자바 컬렉션 프레임워크?",
        "answer": "Collection: List(LinkedList, Stack, Vector, ArrayList), Set(HashSet, SortedSet(TreeSet)) Map: Hashtable, HashMap, SortedMap (TreeMap)",
        "hashtags": "#Java #data-structure #JCF",
        "createdAt": "2024-08-08"
    },

    {
        "question": "Java에서 Stack 사용하기",
        "answer": "Stack<String> stack = new Stack<>(); stack.push(\"first\"); System.out.println(\"삽입 : \" + stack.peek() ); for( String item : stack ) {System.out.println(item);} while( !stack.isEmpty() ) {  System.out.println( stack.pop() ); } System.out.println(\"Stack이 비었습니까 : \" + stack.isEmpty());",
        "hashtags": "#Java #data-structure #Stack",
        "createdAt": "2024-08-08"
    }

 ]